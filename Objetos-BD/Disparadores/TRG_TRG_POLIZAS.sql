CREATE OR REPLACE TRIGGER SICAS_OC.TRG_POLIZAS
  BEFORE INSERT OR UPDATE OR DELETE ON POLIZAS
  FOR EACH ROW 
DECLARE
    vl_Texto    VARCHAR2(4000);
    vl_ErrorN   NUMBER;
    vl_ErrorC   VARCHAR2(4000);
BEGIN
  /*TRIGGER PARA MONITOREO DE LA TABLA POLIZAS
    FECHA CREACIÓN: 02/02/2024
    MODIFICO: LUIS ARGENIS REYNOSO ALVAREZ
    INDICE UNICO: IDPOLIZA 
  */
  IF DELETING THEN 
      vl_Texto := TO_CHAR(:OLD.IDPOLIZA)||' - '||TO_CHAR(:OLD.TIPOPOL)||' - '||TO_CHAR(:OLD.NUMPOLREF)||' - '||TO_CHAR(:OLD.FECINIVIG)||' - '||TO_CHAR(:OLD.FECFINVIG)||' - '||
                  TO_CHAR(:OLD.FECEMISION)||' - '||TO_CHAR(:OLD.STSPOLIZA)||' - '||TO_CHAR(:OLD.FECANUL)||' - '||TO_CHAR(:OLD.SUMAASEG_LOCAL)||' - '||TO_CHAR(:OLD.SUMAASEG_MONEDA)||' - '||
                  TO_CHAR(:OLD.PRIMANETA_LOCAL)||' - '||TO_CHAR(:OLD.PRIMANETA_MONEDA)||' - '||TO_CHAR(:OLD.NUM_COTIZACION)||' - '||TO_CHAR(:OLD.CODCLIENTE)||' - '||TO_CHAR(:OLD.COD_AGENTE)||' - '||
                  TO_CHAR(:OLD.CODPLANPAGO)||' - '||TO_CHAR(:OLD.NUMPOLUNICO)||' - '||TO_CHAR(:OLD.INDFACTURAPOL)||' - '||TO_CHAR(:OLD.INDFACTELECTRONICA)||' - '||TO_CHAR(:OLD.INDCALCDERECHOEMIS)||' - '||
                  TO_CHAR(:OLD.NUMFOLIOPORTAL)||' - '||TO_CHAR(:OLD.PORCGTOADQUI)||' - '||TO_CHAR(:OLD.PORCUTILIDAD)||' - '||
                  TO_CHAR(:OLD.PORCDESCUENTO)||' - '||TO_CHAR(:OLD.PORCEXTRAPRIMA)||' - '||TO_CHAR(:OLD.MONTOEXTRAPRIMA)||' - '||TO_CHAR(:OLD.FACTORAJUSTE)||' - '||TO_CHAR(:OLD.MONTODEDUCIBLE)||' - '||
                  TO_CHAR(:OLD.FACTFORMULADEDUC);
      
      OC_LOG_CONF_FACT_ELECT.INSERTA(1, 'POLIZAS', 'SE ELIMINA TODO EL REGISTRO', vl_Texto, 'REGISTRO ELIMINADO', 'DELETE',:OLD.IDPOLIZA);
  END IF;


  IF UPDATING THEN 
    IF (:NEW.IDPOLIZA <> :OLD.IDPOLIZA) THEN
      OC_LOG_CONF_FACT_ELECT.INSERTA(1, 'POLIZAS', 'IDPOLIZA',  TO_CHAR(:OLD.IDPOLIZA),  TO_CHAR(:NEW.IDPOLIZA), 'UPDATE',:OLD.IDPOLIZA);
    END IF;
    IF (:NEW.TIPOPOL <> :OLD.TIPOPOL) THEN
       OC_LOG_CONF_FACT_ELECT.INSERTA(1, 'POLIZAS', 'TIPOPOL',  TO_CHAR(:OLD.TIPOPOL),  TO_CHAR(:NEW.TIPOPOL), 'UPDATE',:OLD.IDPOLIZA);
    END IF;
    IF (:NEW.NUMPOLREF <> :OLD.NUMPOLREF) THEN
       OC_LOG_CONF_FACT_ELECT.INSERTA(1, 'POLIZAS', 'NUMPOLREF', TO_CHAR(:OLD.NUMPOLREF), TO_CHAR(:NEW.NUMPOLREF), 'UPDATE',:OLD.IDPOLIZA);
    END IF;
    IF (:NEW.FECINIVIG <> :OLD.FECINIVIG) THEN
       OC_LOG_CONF_FACT_ELECT.INSERTA(1, 'POLIZAS', 'FECINIVIG', TO_CHAR(:OLD.FECINIVIG), TO_CHAR(:NEW.FECINIVIG), 'UPDATE',:OLD.IDPOLIZA);
    END IF;
    IF (:NEW.FECFINVIG <> :OLD.FECFINVIG) THEN
       OC_LOG_CONF_FACT_ELECT.INSERTA(1, 'POLIZAS', 'FECFINVIG',  TO_CHAR(:OLD.FECFINVIG),  TO_CHAR(:NEW.FECFINVIG), 'UPDATE',:OLD.IDPOLIZA);
    END IF;
    IF (:NEW.FECEMISION <> :OLD.FECEMISION) THEN
       OC_LOG_CONF_FACT_ELECT.INSERTA(1, 'POLIZAS', 'FECEMISION',  TO_CHAR(:OLD.FECEMISION),  TO_CHAR(:NEW.FECEMISION), 'UPDATE',:OLD.IDPOLIZA);
    END IF;
    IF (:NEW.STSPOLIZA <> :OLD.STSPOLIZA) THEN
       OC_LOG_CONF_FACT_ELECT.INSERTA(1, 'POLIZAS', 'STSPOLIZA', TO_CHAR(:OLD.STSPOLIZA), TO_CHAR(:NEW.STSPOLIZA), 'UPDATE',:OLD.IDPOLIZA);
    END IF;
    IF (:NEW.FECANUL <> :OLD.FECANUL) THEN
       OC_LOG_CONF_FACT_ELECT.INSERTA(1, 'POLIZAS', 'FECANUL', TO_CHAR(:OLD.FECANUL), TO_CHAR(:NEW.FECANUL), 'UPDATE',:OLD.IDPOLIZA);
    END IF;
    IF (:NEW.SUMAASEG_LOCAL <> :OLD.SUMAASEG_LOCAL) THEN
       OC_LOG_CONF_FACT_ELECT.INSERTA(1, 'POLIZAS', 'SUMAASEG_LOCAL', TO_CHAR(:OLD.SUMAASEG_LOCAL), TO_CHAR(:NEW.SUMAASEG_LOCAL), 'UPDATE',:OLD.IDPOLIZA);
    END IF;
    IF (:NEW.SUMAASEG_MONEDA <> :OLD.SUMAASEG_MONEDA) THEN
       OC_LOG_CONF_FACT_ELECT.INSERTA(1, 'POLIZAS', 'SUMAASEG_MONEDA', TO_CHAR(:OLD.SUMAASEG_MONEDA), TO_CHAR(:NEW.SUMAASEG_MONEDA), 'UPDATE',:OLD.IDPOLIZA);
    END IF;
    IF (:NEW.PRIMANETA_LOCAL <> :OLD.PRIMANETA_LOCAL) THEN
       OC_LOG_CONF_FACT_ELECT.INSERTA(1, 'POLIZAS', 'PRIMANETA_LOCAL', TO_CHAR(:OLD.PRIMANETA_LOCAL), TO_CHAR(:NEW.PRIMANETA_LOCAL), 'UPDATE',:OLD.IDPOLIZA);
    END IF;
    IF (:NEW.PRIMANETA_MONEDA <> :OLD.PRIMANETA_MONEDA) THEN
       OC_LOG_CONF_FACT_ELECT.INSERTA(1, 'POLIZAS', 'PRIMANETA_MONEDA', TO_CHAR(:OLD.PRIMANETA_MONEDA), TO_CHAR(:NEW.PRIMANETA_MONEDA), 'UPDATE',:OLD.IDPOLIZA);
    END IF;
    IF (:NEW.NUM_COTIZACION <> :OLD.NUM_COTIZACION) THEN
       OC_LOG_CONF_FACT_ELECT.INSERTA(1, 'POLIZAS', 'NUM_COTIZACION', TO_CHAR(:OLD.NUM_COTIZACION), TO_CHAR(:NEW.NUM_COTIZACION), 'UPDATE',:OLD.IDPOLIZA);
    END IF;
    IF (:NEW.CODCLIENTE <> :OLD.CODCLIENTE) THEN
       OC_LOG_CONF_FACT_ELECT.INSERTA(1, 'POLIZAS', 'CODCLIENTE', TO_CHAR(:OLD.CODCLIENTE), TO_CHAR(:NEW.CODCLIENTE), 'UPDATE',:OLD.IDPOLIZA);
    END IF;
    IF (:NEW.COD_AGENTE <> :OLD.COD_AGENTE) THEN
       OC_LOG_CONF_FACT_ELECT.INSERTA(1, 'POLIZAS', 'COD_AGENTE', TO_CHAR(:OLD.COD_AGENTE), TO_CHAR(:NEW.COD_AGENTE), 'UPDATE',:OLD.IDPOLIZA);
    END IF;
    IF (:NEW.CODPLANPAGO <> :OLD.CODPLANPAGO) THEN
       OC_LOG_CONF_FACT_ELECT.INSERTA(1, 'POLIZAS', 'CODPLANPAGO', TO_CHAR(:OLD.CODPLANPAGO), TO_CHAR(:NEW.CODPLANPAGO), 'UPDATE',:OLD.IDPOLIZA);
    END IF;
    IF (:NEW.NUMPOLUNICO <> :OLD.NUMPOLUNICO) THEN
       OC_LOG_CONF_FACT_ELECT.INSERTA(1, 'POLIZAS', 'NUMPOLUNICO', TO_CHAR(:OLD.NUMPOLUNICO), TO_CHAR(:NEW.NUMPOLUNICO), 'UPDATE',:OLD.IDPOLIZA);
    END IF;
    IF (:NEW.INDFACTURAPOL <> :OLD.INDFACTURAPOL) THEN
       OC_LOG_CONF_FACT_ELECT.INSERTA(1, 'POLIZAS', 'INDFACTURAPOL', TO_CHAR(:OLD.INDFACTURAPOL), TO_CHAR(:NEW.INDFACTURAPOL), 'UPDATE',:OLD.IDPOLIZA);
    END IF;
    IF (:NEW.INDFACTELECTRONICA <> :OLD.INDFACTELECTRONICA) THEN
       OC_LOG_CONF_FACT_ELECT.INSERTA(1, 'POLIZAS', 'INDFACTELECTRONICA', TO_CHAR(:OLD.INDFACTELECTRONICA), TO_CHAR(:NEW.INDFACTELECTRONICA), 'UPDATE',:OLD.IDPOLIZA);
    END IF;
    IF (:NEW.INDCALCDERECHOEMIS <> :OLD.INDCALCDERECHOEMIS) THEN
       OC_LOG_CONF_FACT_ELECT.INSERTA(1, 'POLIZAS', 'INDCALCDERECHOEMIS', TO_CHAR(:OLD.INDCALCDERECHOEMIS), TO_CHAR(:NEW.INDCALCDERECHOEMIS), 'UPDATE',:OLD.IDPOLIZA);
    END IF;
    IF (:NEW.NUMFOLIOPORTAL <> :OLD.NUMFOLIOPORTAL) THEN
       OC_LOG_CONF_FACT_ELECT.INSERTA(1, 'POLIZAS', 'NUMFOLIOPORTAL', TO_CHAR(:OLD.NUMFOLIOPORTAL), TO_CHAR(:NEW.NUMFOLIOPORTAL), 'UPDATE',:OLD.IDPOLIZA);
    END IF;
  END IF;    

EXCEPTION
    WHEN OTHERS THEN 
      vl_ErrorN := SQLCODE;
      vl_ErrorC := 'Error con el disparador de POLIZAS, Contacte al administrador. '||SQLERRM;
      raise_application_error( -20000,vl_ErrorC);
END;
/

CREATE OR REPLACE PUBLIC SYNONYM TRG_POLIZAS FOR SICAS_OC.TRG_POLIZAS;
