CREATE OR REPLACE TRIGGER SICAS_OC.TRG_PROCESOS_CONTABLES
  BEFORE INSERT OR UPDATE OR DELETE ON PROCESOS_CONTABLES
  FOR EACH ROW 
DECLARE
    vl_Texto    VARCHAR2(4000);
    vl_Primary  VARCHAR2(2000);
    vl_ErrorN   NUMBER;
    vl_ErrorC   VARCHAR2(4000);
BEGIN
  /*TRIGGER PARA MONITOREO DE LA TABLA PROCESOS_CONTABLES
    FECHA CREACIÓN: 22/06/2023
    MODIFICO: LUIS ARGENIS REYNOSO ALVAREZ
  */

  IF DELETING THEN 
      vl_Texto := TO_CHAR(:OLD.CODCIA)||' - '||TO_CHAR(:OLD.CODPROCESO)||' - '||TO_CHAR(:OLD.NOMPROCESO)||' - '||TO_CHAR(:OLD.TIPOCOMPROB)||' - '||TO_CHAR(:OLD.TIPOCOMPREV)||' - '||TO_CHAR(:OLD.CODUSUARIO)||' - '||TO_CHAR(:OLD.FECULTCAMBIO)||' - '||TO_CHAR(:OLD.TIPODIARIO);  
      vl_Primary := 'CODCIA: '||:OLD.CODCIA||' CODPROCESO: '||:OLD.CODPROCESO;
      OC_LOG_CONF_FACT_ELECT.INSERTA(:OLD.CODCIA, 'PROCESOS_CONTABLES', 'SE ELIMINA TODO EL REGISTRO', vl_Texto, 'REGISTRO ELIMINADO', 'DELETE',vl_Primary);
  END IF;
 
  IF INSERTING THEN 
      vl_Texto := TO_CHAR(:NEW.CODCIA)||' - '||TO_CHAR(:NEW.CODPROCESO)||' - '||TO_CHAR(:NEW.NOMPROCESO)||' - '||TO_CHAR(:NEW.TIPOCOMPROB)||' - '||TO_CHAR(:NEW.TIPOCOMPREV)||' - '||TO_CHAR(:NEW.CODUSUARIO)||' - '||TO_CHAR(:NEW.FECULTCAMBIO)||' - '||TO_CHAR(:NEW.TIPODIARIO); 
      vl_Primary := 'CODCIA: '||:NEW.CODCIA||' CODPROCESO: '||:NEW.CODPROCESO;
      OC_LOG_CONF_FACT_ELECT.INSERTA(:NEW.CODCIA, 'PROCESOS_CONTABLES', 'SE AGREGA NUEVO REGISTRO', vl_Texto, 'NUEVO REGISTRO', 'INSERT',vl_Primary);
  END IF;

  IF UPDATING THEN 
    IF (:NEW.CODCIA <> :OLD.CODCIA) THEN
      vl_Primary := 'CODCIA: '||:OLD.CODCIA||' CODPROCESO: '||:OLD.CODPROCESO;
      OC_LOG_CONF_FACT_ELECT.INSERTA(:OLD.CODCIA, 'PROCESOS_CONTABLES', 'CODCIA', TO_CHAR(:OLD.CODCIA), TO_CHAR(:NEW.CODCIA), 'UPDATE',vl_Primary);
    END IF;
    IF (:NEW.CODPROCESO <> :OLD.CODPROCESO) THEN
      vl_Primary := 'CODCIA: '||:OLD.CODCIA||' CODPROCESO: '||:OLD.CODPROCESO;
      OC_LOG_CONF_FACT_ELECT.INSERTA(:OLD.CODCIA, 'PROCESOS_CONTABLES', 'CODPROCESO', TO_CHAR(:OLD.CODPROCESO), TO_CHAR(:NEW.CODPROCESO), 'UPDATE',vl_Primary);
    END IF;
    IF (NVL(:NEW.NOMPROCESO,-20000) <> NVL(:OLD.NOMPROCESO,-20000)) THEN
      vl_Primary := 'CODCIA: '||:OLD.CODCIA||' CODPROCESO: '||:OLD.CODPROCESO;
      OC_LOG_CONF_FACT_ELECT.INSERTA(:OLD.CODCIA, 'PROCESOS_CONTABLES', 'NOMPROCESO', TO_CHAR(:OLD.NOMPROCESO), TO_CHAR(:NEW.NOMPROCESO), 'UPDATE',vl_Primary);
    END IF;
    IF (NVL(:NEW.TIPOCOMPROB,-20000) <> NVL(:OLD.TIPOCOMPROB,-20000)) THEN
      vl_Primary := 'CODCIA: '||:OLD.CODCIA||' CODPROCESO: '||:OLD.CODPROCESO;
      OC_LOG_CONF_FACT_ELECT.INSERTA(:OLD.CODCIA, 'PROCESOS_CONTABLES', 'TIPOCOMPROB', TO_CHAR(:OLD.TIPOCOMPROB), TO_CHAR(:NEW.TIPOCOMPROB), 'UPDATE',vl_Primary);
    END IF;
    IF (NVL(:NEW.TIPOCOMPREV,-20000) <> NVL(:OLD.TIPOCOMPREV,-20000)) THEN
      vl_Primary := 'CODCIA: '||:OLD.CODCIA||' CODPROCESO: '||:OLD.CODPROCESO;
      OC_LOG_CONF_FACT_ELECT.INSERTA(:OLD.CODCIA, 'PROCESOS_CONTABLES', 'TIPOCOMPREV', TO_CHAR(:OLD.TIPOCOMPREV), TO_CHAR(:NEW.TIPOCOMPREV), 'UPDATE',vl_Primary);
    END IF;
    IF (NVL(:NEW.CODUSUARIO,-20000) <> NVL(:OLD.CODUSUARIO,-20000)) THEN
      vl_Primary := 'CODCIA: '||:OLD.CODCIA||' CODPROCESO: '||:OLD.CODPROCESO;
      OC_LOG_CONF_FACT_ELECT.INSERTA(:OLD.CODCIA, 'PROCESOS_CONTABLES', 'CODUSUARIO', TO_CHAR(:OLD.CODUSUARIO), TO_CHAR(:NEW.CODUSUARIO), 'UPDATE',vl_Primary);
    END IF;
    IF (NVL(:NEW.FECULTCAMBIO,SYSDATE) <> NVL(:OLD.FECULTCAMBIO,SYSDATE)) THEN
      vl_Primary := 'CODCIA: '||:OLD.CODCIA||' CODPROCESO: '||:OLD.CODPROCESO;
      OC_LOG_CONF_FACT_ELECT.INSERTA(:OLD.CODCIA, 'PROCESOS_CONTABLES', 'FECULTCAMBIO', TO_CHAR(:OLD.FECULTCAMBIO), TO_CHAR(:NEW.FECULTCAMBIO), 'UPDATE',vl_Primary);
    END IF;
    IF (NVL(:NEW.TIPODIARIO,-20000) <> NVL(:OLD.TIPODIARIO,-20000)) THEN
      vl_Primary := 'CODCIA: '||:OLD.CODCIA||' CODPROCESO: '||:OLD.CODPROCESO;
      OC_LOG_CONF_FACT_ELECT.INSERTA(:OLD.CODCIA, 'PROCESOS_CONTABLES', 'TIPODIARIO', TO_CHAR(:OLD.TIPODIARIO), TO_CHAR(:NEW.TIPODIARIO), 'UPDATE',vl_Primary);
    END IF;
  END IF;    

EXCEPTION
    WHEN OTHERS THEN 
      vl_ErrorN := SQLCODE;
      vl_ErrorC := 'Error con el disparador de PROCESOS_CONTABLES, Contacte al administrador. '||SQLERRM;
      raise_application_error( -20000,vl_ErrorC);
END;
/

CREATE OR REPLACE PUBLIC SYNONYM TRG_PROCESOS_CONTABLES FOR SICAS_OC.TRG_PROCESOS_CONTABLES;
