CREATE OR REPLACE PACKAGE OC_AMORTIZACION IS

PROCEDURE CARGA_COMPLETA_INFO_ALTBAJ(P_POLIZA NUMBER);

PROCEDURE CARGA_TB_AMORTI(P_POLIZA NUMBER);

PROCEDURE ACTUALIZA_SUMAS(P_FE_INICIO DATE,
                          P_FE_FIN    DATE,
                          P_POLIZA    NUMBER,
                          P_ID_CODCIA NUMBER);

END OC_AMORTIZACION;
/

CREATE OR REPLACE PACKAGE BODY OC_AMORTIZACION IS
--
-- CREACION 28/03/2016
--
PROCEDURE CARGA_COMPLETA_INFO_ALTBAJ(P_POLIZA NUMBER) IS
--
-- COMPLEMENTA TABLA HISTORICA PARA QUE OPERE COMO MAESTRA DE LA TABLA DE AMORTIZACION
--
--
CURSOR INFO IS
SELECT P.NUMPOLUNICO NUMPOLUNICO,
       DPE.IDPOLIZA  POLIZA,
       DPE.IDETPOL   CERTIFICADO, 
       DPE.CAMPO4    CREDITO,
       DPE.CAMPO5    TRABAJADOR,
       DPE.CAMPO1    POLIZA_INFO,
       DPE.CAMPO2    ENDOSO_INFO,
       ROUND(((TO_NUMBER(DPE.CAMPO17,'9999999999.99')/100) / 12),7) TAZA_INTER_MENSUAL,
       ROUND((
       TO_NUMBER(DPE.CAMPO14,'9999999999.99')   --SALDO INSOLUTO
       /
       (
       (
       1 -
       POWER(1 + ROUND(((TO_NUMBER(DPE.CAMPO17,'9999999999.99')/100) / 12),7)  --INTERESES MENSUAL
           ,
         -DPE.CAMPO16
         )
       )
       /
       (ROUND(((TO_NUMBER(DPE.CAMPO17,'9999999999.99')/100) / 12),7)   --INTERES MENSUAL
        ))),7) PAGO_MENSUAL,
       ROWNUM
  FROM POLIZAS            P,
       DETALLE_POLIZA     DP,
       DATOS_PART_EMISION DPE
 WHERE P.CODCIA   = 1
   AND P.IDPOLIZA = P_POLIZA
   --
   AND DP.CODCIA   = P.CODCIA
   AND DP.IDPOLIZA = P.IDPOLIZA
   --
   AND DPE.CODCIA   = DP.CODCIA
   AND DPE.IDPOLIZA = DP.IDPOLIZA
   AND DPE.IDETPOL  = DP.IDETPOL 
;
BEGIN
--  DBMS_OUTPUT.PUT_LINE('INICIO    : '||TO_CHAR(SYSDATE,'DD/MM/YYYY HH24;MI:SS'));
  FOR X IN INFO LOOP

/*
      DBMS_OUTPUT.PUT_LINE('POLIZA         : '||X.POLIZA);
      DBMS_OUTPUT.PUT_LINE('CERTIFICADO    : '||X.CERTIFICADO);
      DBMS_OUTPUT.PUT_LINE('POLIZA_INFO    : '||X.POLIZA_INFO);
      DBMS_OUTPUT.PUT_LINE('ENDOSO_INFO    : '||X.ENDOSO_INFO);
      DBMS_OUTPUT.PUT_LINE('CREDITO        : '||X.CREDITO);
      DBMS_OUTPUT.PUT_LINE('TRABAJADOR     : '||X.TRABAJADOR);
      DBMS_OUTPUT.PUT_LINE('TAZA_INTERES_M : '||TO_CHAR(X.TAZA_INTER_MENSUAL));
      DBMS_OUTPUT.PUT_LINE('PAGO MENSUAL   : '||X.PAGO_MENSUAL);
      DBMS_OUTPUT.PUT_LINE(' ');
*/   
      --
      -- ACTUALIZA TABLA CARGA INFONACOT
      --
      UPDATE INFO_ALTBAJ IA
         SET IA.IDPOLIZA       = X.POLIZA,
             IA.IDETPOL        = X.CERTIFICADO,
             IA.TAZA_INTE_MENS = X.TAZA_INTER_MENSUAL,
             IA.PAGO_MENS      = X.PAGO_MENSUAL,
             IA.NU_REMESA      = X.NUMPOLUNICO,
             IA.ST_REGISTRO    = 'EMI',
             IA.NOMBRE_COMPLETO = IA.PATERNO||' '||IA.MATERNO||' '||IA.NOMBRE||' '||IA.SEGUNDO_NOMBRE
       WHERE IA.ID_CREDITO    = X.CREDITO
         AND IA.ID_TRABAJADOR = X.TRABAJADOR
         AND IA.ID_POLIZA     = X.POLIZA_INFO
         AND IA.ID_ENDOSO     = X.ENDOSO_INFO
      ;
      --
      COMMIT;
      --
  END LOOP; 
  --
--  DBMS_OUTPUT.PUT_LINE('FIN       : '||TO_CHAR(SYSDATE,'DD/MM/YYYY HH24;MI:SS'));
--  DBMS_OUTPUT.PUT_LINE('REGISTROS : '||W_LEIDOS);
  --
END;
--
--
--
PROCEDURE CARGA_TB_AMORTI(P_POLIZA NUMBER)  IS
SUMA_DESEM     NUMBER;
SUMA_ANT       NUMBER;
MESES          NUMBER;
SALDO_INSO     NUMBER;
PAGO_INTERESES NUMBER;
IVA_INTERESES  NUMBER;
PAGO_CAPITAL   NUMBER;
MES            NUMBER;
W_MESVERSARIO  DATE;
--
CURSOR AMORTI IS
SELECT A.ID_CODCIA        CIA,
       A.NU_REMESA        REMESA,
       A.IDPOLIZA         POLIZA,
       A.IDETPOL          CERTIFICADO,
       A.ID_CREDITO       CREDITO,
       A.ID_TRABAJADOR    TRABAJADOR,
       A.SALDO_INSOLUTO   SALDO_INSOLUTO,
       A.FE_INICIO        FE_INI_CRED,
       A.PLAZO            PLAZO,
       A.TAZA_INTERES     TAZA_INTER_ANUAL,
       A.TAZA_INTE_MENS   TAZA_INTER_MENSUAL,    -- SE DEBE DE CALCULAR ANTES
       A.PAGO_MENS        PAGO_MENSUAL,          -- SE DEBE DE CALCULAR ANTES
       A.TIPO_MOVIMIENTO  TIPO_MOVTO,
       A.PRIMA            PRIMA,
       A.CUOTA            CUOTA,
       500                SUMA_DESPE
 FROM INFO_ALTBAJ A
WHERE A.IDPOLIZA    = P_POLIZA
  AND A.ST_REGISTRO = 'EMI'
;
BEGIN
  SUMA_DESEM := 0;
  MESES      := 0;
  SALDO_INSO := 0;
  --
--DBMS_OUTPUT.PUT_LINE('INICIO    : '||TO_CHAR(SYSDATE,'DD/MM/YYYY HH24;MI:SS'));
  FOR X IN AMORTI LOOP
      PAGO_INTERESES := 0;
      IVA_INTERESES  := 0;
      PAGO_CAPITAL   := 0;
      SALDO_INSO     := X.SALDO_INSOLUTO;
      W_MESVERSARIO  := X.FE_INI_CRED;
      --
/*    
      DBMS_OUTPUT.PUT_LINE('POLIZA         : '||X.POLIZA);
      DBMS_OUTPUT.PUT_LINE('CERTIFICADO    : '||X.CERTIFICADO);
      DBMS_OUTPUT.PUT_LINE('CREDITO        : '||X.CREDITO);
      DBMS_OUTPUT.PUT_LINE('TRABAJADOR     : '||X.TRABAJADOR);
      DBMS_OUTPUT.PUT_LINE('SALDO_INSOLUTO : '||X.SALDO_INSOLUTO);
      DBMS_OUTPUT.PUT_LINE('FE_INI_CRED    : '||X.FE_INI_CRED);
      DBMS_OUTPUT.PUT_LINE('PLAZO          : '||X.PLAZO);
      DBMS_OUTPUT.PUT_LINE('TAZA_INTERES_A : '||X.TAZA_INTER_ANUAL);
      DBMS_OUTPUT.PUT_LINE('TAZA_INTERES_M : '||TO_CHAR(X.TAZA_INTER_MENSUAL));
      DBMS_OUTPUT.PUT_LINE('PAGO MENSUAL   : '||X.PAGO_MENSUAL);
      DBMS_OUTPUT.PUT_LINE('TIPO_MOVTO     : '||X.TIPO_MOVTO);
      DBMS_OUTPUT.PUT_LINE('PRIMA          : '||X.PRIMA);
      DBMS_OUTPUT.PUT_LINE('CUOTA          : '||X.CUOTA);
      DBMS_OUTPUT.PUT_LINE('--MES-- -- PAGO CAPITAL -- --SALDO INSOLUTO -- --- BASICA --- --- INVALIDEZ---  -- DESEMPLEO--  -- DESPENSA -- --MESVERSARIO--');
*/      --
      FOR I IN 1.. X.PLAZO LOOP
          --    
          -- SALDO INSOLUTO DE DESEMPLEO
          --  
          MES := I;
          IF I > 1 THEN
            PAGO_INTERESES := SALDO_INSO * X.TAZA_INTER_MENSUAL;
            IVA_INTERESES  := PAGO_INTERESES * .16;
            PAGO_CAPITAL   := X.PAGO_MENSUAL - PAGO_INTERESES;
            SALDO_INSO     := SALDO_INSO - PAGO_CAPITAL;
            SALDO_INSO     := ROUND(SALDO_INSO,7);
          ELSE
             SUMA_ANT := X.CUOTA * 6;
          END IF;
          --
          -- COBERTURA DE DESEMPLEO
          --
          IF X.PLAZO - I > 5 THEN
             MESES := 6;
          ELSE
             MESES := X.PLAZO - I;
          END IF;
          --
          SUMA_DESEM := SUMA_ANT;
          --
          -- INSERTA TABLA DE AMOTIZACION
          --
          INSERT INTO TB_AMORTI
           (ID_CODCIA,
            NU_REMESA,
            ID_CREDITO,
            ID_TRABAJADOR,
            IDPOLIZA,
            IDETPOL,
            TIPO_MOVIMIENTO,
            MES,
            PAGO_INTERES,
            PAGO_INTERES_IVA,
            PAGO_CAPITAL,
            SALDO_INSOLUTO,
            SUM_ASEG_BASICA,
            SUM_ASEG_INVALIDEZ,
            SUM_ASEG_DESEMPLEO,
            SUM_ASEG_DESPENSA,
            MESVERSARIO,
            ST_ACTUALIZACION
            )
          VALUES
           (X.CIA,
            X.REMESA,
            X.CREDITO,
            X.TRABAJADOR,
            X.POLIZA,
            X.CERTIFICADO,
            X.TIPO_MOVTO,
            MES,
            PAGO_INTERESES,
            IVA_INTERESES,
            PAGO_CAPITAL,
            SALDO_INSO,
            SALDO_INSO,
            SALDO_INSO,
            SUMA_DESEM,
            X.SUMA_DESPE,
            W_MESVERSARIO,
            'N'
           );
          --
          COMMIT;
          --
          SUMA_ANT := X.CUOTA * MESES;
--          DBMS_OUTPUT.PUT_LINE(LPAD(I,4,' ')||' '||LPAD(ROUND(NVL(PAGO_CAPITAL,0),2),17,' ')||' '||LPAD(SALDO_INSO,20,' ')||' '||LPAD(SALDO_INSO,17,' ')||' '||LPAD(SALDO_INSO,16,' ')||' '||LPAD(SUMA_DESEM,15,' ')||' '||LPAD(X.SUMA_DESPE,10,' ')||' '||LPAD(TO_CHAR(W_MESVERSARIO,'DD/MM/YYYY'),18,' ') );
          --
          SELECT ADD_MONTHS(X.FE_INI_CRED,MES) 
            INTO W_MESVERSARIO
            FROM DUAL;
          --
      END LOOP;
      --
      UPDATE INFO_ALTBAJ A
         SET A.ST_REGISTRO = 'TER'
       WHERE A.ID_CODCIA     = X.CIA
         AND A.NU_REMESA     = X.REMESA
         AND A.ID_CREDITO    = X.CREDITO
         AND A.ID_TRABAJADOR = X.TRABAJADOR
      ;         
      --
      COMMIT;
      --
  END LOOP; 
-- DBMS_OUTPUT.PUT_LINE('FIN       : '||TO_CHAR(SYSDATE,'DD/MM/YYYY HH24;MI:SS'));
-- DBMS_OUTPUT.PUT_LINE('W_LEIDOS : '||W_LEIDOS);
END;
--
--
--
PROCEDURE ACTUALIZA_SUMAS(P_FE_INICIO DATE,
                          P_FE_FIN    DATE,
                          P_POLIZA    NUMBER,
                          P_ID_CODCIA NUMBER) IS
BEGIN
  DECLARE
  W_SUMAASEG_LOCAL  COBERT_ACT.SUMAASEG_LOCAL%TYPE;
  W_SUMAASEG_MONEDA COBERT_ACT.SUMAASEG_MONEDA%TYPE;
--
CURSOR COB IS
SELECT TB.ID_CODCIA           CIA,
       TB.IDPOLIZA            POLIZA,
       TB.IDETPOL             CERTIFICADO,
       TB.SALDO_INSOLUTO      SALDOI, 
       TB.SUM_ASEG_BASICA     SA_BASICA,
       TB.SUM_ASEG_INVALIDEZ  SA_INVALIDEZ,
       TB.SUM_ASEG_DESEMPLEO  SA_DESEMPLEO,
       TB.TIPO_MOVIMIENTO     TP_MOVTO,
       TB.MES       MES,
       ROWNUM
  FROM TB_AMORTI         TB
 WHERE TB.MESVERSARIO      BETWEEN P_FE_INICIO AND P_FE_FIN   --ESTE DEBE DE VARIAR DE ACUERDO AL MES A ACTUALIZACION
   AND TB.ST_ACTUALIZACION = 'N'
   AND TB.IDPOLIZA         = P_POLIZA
  ;
  --
BEGIN
  --
  FOR I IN COB LOOP
      --
      -- ACTUALIZA COBERT_ACT
      -- 
      UPDATE COBERT_ACT CA
         SET CA.SUMAASEG_LOCAL  = I.SA_DESEMPLEO,
             CA.SUMAASEG_MONEDA = I.SA_DESEMPLEO
       WHERE CA.CODCIA    = I.CIA
         AND CA.IDPOLIZA  = I.POLIZA
         AND CA.IDETPOL   = I.CERTIFICADO
         AND CA.CODCOBERT = 'DESEMP'
      ;
      UPDATE COBERT_ACT CA  
         SET CA.SUMAASEG_LOCAL  = I.SA_BASICA,
             CA.SUMAASEG_MONEDA = I.SA_BASICA
       WHERE CA.CODCIA    = I.CIA
         AND CA.IDPOLIZA  = I.POLIZA
         AND CA.IDETPOL   = I.CERTIFICADO
         AND CA.CODCOBERT = 'FALLEC'
      ;
      UPDATE COBERT_ACT CA
         SET CA.SUMAASEG_LOCAL  = I.SA_INVALIDEZ,
             CA.SUMAASEG_MONEDA = I.SA_INVALIDEZ
       WHERE CA.CODCIA    = I.CIA
         AND CA.IDPOLIZA  = I.POLIZA
         AND CA.IDETPOL   = I.CERTIFICADO
         AND CA.CODCOBERT = 'INVALI'
      ;
      --
      -- ACTUALIZA COBERT_ACT
      -- 
      UPDATE COBERTURAS CO
         SET CO.SUMA_ASEGURADA_LOCAL  = I.SA_DESEMPLEO,
             CO.SUMA_ASEGURADA_MONEDA = I.SA_DESEMPLEO
       WHERE CO.CODCIA    = I.CIA
         AND CO.IDPOLIZA  = I.POLIZA
         AND CO.IDETPOL   = I.CERTIFICADO
         AND CO.CODCOBERT = 'DESEMP'
      ;
      UPDATE COBERTURAS CO
         SET CO.SUMA_ASEGURADA_LOCAL  = I.SA_BASICA,
             CO.SUMA_ASEGURADA_MONEDA = I.SA_BASICA
       WHERE CO.CODCIA    = I.CIA
         AND CO.IDPOLIZA  = I.POLIZA
         AND CO.IDETPOL   = I.CERTIFICADO
         AND CO.CODCOBERT = 'FALLEC'
      ;
      UPDATE COBERTURAS CO
         SET CO.SUMA_ASEGURADA_LOCAL  = I.SA_INVALIDEZ,
             CO.SUMA_ASEGURADA_MONEDA = I.SA_INVALIDEZ
       WHERE CO.CODCIA    = I.CIA
         AND CO.IDPOLIZA  = I.POLIZA
         AND CO.IDETPOL   = I.CERTIFICADO
         AND CO.CODCOBERT = 'INVALI'
      ;
      --
      -- ACTUALIZA DETALLE_POLIZA
      --
      SELECT SUM(CA.SUMAASEG_LOCAL),
             SUM(CA.SUMAASEG_MONEDA)
        INTO W_SUMAASEG_LOCAL,
             W_SUMAASEG_MONEDA
        FROM COBERT_ACT CA
       WHERE CA.CODCIA   = I.CIA
         AND CA.IDPOLIZA = I.POLIZA
         AND CA.IDETPOL  = I.CERTIFICADO
      ;
      UPDATE DETALLE_POLIZA DP
         SET DP.SUMA_ASEG_LOCAL  = W_SUMAASEG_LOCAL,
             DP.SUMA_ASEG_MONEDA = W_SUMAASEG_MONEDA
       WHERE DP.CODCIA   = I.CIA
         AND DP.IDPOLIZA = I.POLIZA
         AND DP.IDETPOL  = I.CERTIFICADO
      ;
      --
      UPDATE TB_AMORTI TB
         SET TB.ST_ACTUALIZACION = 'S'
       WHERE TB.IDPOLIZA         = I.POLIZA
         AND TB.IDETPOL          = I.CERTIFICADO
         AND TB.TIPO_MOVIMIENTO  = I.TP_MOVTO
         AND TB.MES              = I.MES
         AND TB.ST_ACTUALIZACION = 'N'
      ;
      --
--      :SUMASEG.TI_REG_PROCESADOS := :SUMASEG.TI_REG_PROCESADOS + 1;SYNCHRONIZE;
      --
      COMMIT;
      --
  END LOOP;
  --
  -- ACTUALIZA POLIZAS
  --
  SELECT SUM(DP.SUMA_ASEG_LOCAL),
         SUM(DP.SUMA_ASEG_MONEDA)
    INTO W_SUMAASEG_LOCAL,
         W_SUMAASEG_MONEDA
    FROM DETALLE_POLIZA DP
   WHERE DP.CODCIA   = P_ID_CODCIA
     AND DP.IDPOLIZA = P_POLIZA
  ;
  --
  UPDATE POLIZAS P
     SET P.SUMAASEG_LOCAL  = W_SUMAASEG_LOCAL,
         P.SUMAASEG_MONEDA = W_SUMAASEG_MONEDA
   WHERE P.CODCIA   = P_ID_CODCIA
     AND P.IDPOLIZA = P_POLIZA
  ;
  --
  COMMIT;
  --
END;
END;

END OC_AMORTIZACION;
