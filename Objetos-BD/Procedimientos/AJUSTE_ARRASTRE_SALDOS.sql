CREATE OR REPLACE PROCEDURE SICAS_OC.AJUSTE_ARRASTRE_SALDOS  IS
 nCOD_AGENTE   AGENTES.COD_AGENTE%TYPE                 := 1026;
  cCodMoneda    MONEDA.COD_MONEDA%TYPE                  := 'PS';
  dFecDesde     DATE                                    := TO_DATE('01/07/2019','DD/MM/RRRR'); --fija
  dFecHasta     DATE                                    := TRUNC(SYSDATE) - 1;
  DFEINISALDO   SALDOS_COMISIONES_MES.FE_INI_SALDO%TYPE := TRUNC(SYSDATE) - 1;
  NUMRAMOS      NUMBER(3);
  NMONTO10      NUMBER(18,2);
  NMONTO30      NUMBER(18,2);
  NMONTO99      NUMBER(18,2);
  NDIFERENCIA   NUMBER(18,2);
  NMT_SALDO_FINAL  NUMBER(18,2);
  NMT_COMISION_MES NUMBER(18,2);

  CRAMO         VARCHAR2(3);
  NMONTO_MON_EXTRANJERA NUMBER(18,2);

  CURSOR cDiferencia IS
    SELECT AGENTE, SUM(SUMCOMIS) COMISION, SUM(SUMARRASTRE) SALDOS, (SUM(SUMCOMIS) - SUM(SUMARRASTRE)) DIFERENCIA
    FROM (
    SELECT COD_AGENTE AGENTE,SUM(COMISION_MONEDA)  SUMCOMIS, 0 SUMARRASTRE
    FROM COMISIONES
    WHERE TRUNC(FEC_ESTADO)  BETWEEN dFecDesde AND dFecHasta
    AND ESTADO = 'REC'
    AND COD_MONEDA = cCodMoneda
    --AND COD_AGENTE = nCOD_AGENTE
    GROUP BY COD_AGENTE
    UNION
    SELECT COD_AGENTE AGENTE,SUM(COMISION_MONEDA)  SUMCOMIS, 0 SUMARRASTRE
    FROM COMISIONES
    WHERE (TRUNC(FEC_ESTADO)  BETWEEN dFecDesde AND dFecHasta AND
    TRUNC(FEC_LIQUIDACION)  > dFecHasta )
    AND ESTADO = 'LIQ'
    AND COD_MONEDA = cCodMoneda
    --AND COD_AGENTE = nCOD_AGENTE
    GROUP BY COD_AGENTE
    UNION 
    SELECT CD_AGENTE AGENTE, 0 SUMCOMIS, SUM(MT_SALDO_FINAL) SUMARRASTRE
    FROM SALDOS_COMISIONES_MES
    WHERE FE_INI_SALDO = dFecHasta
    AND CD_MONEDA = cCodMoneda
    --AND CD_AGENTE = nCOD_AGENTE
    GROUP BY CD_AGENTE) P
    GROUP BY AGENTE
    HAVING (SUM(SUMCOMIS) - SUM(SUMARRASTRE)) !=0
    ORDER BY AGENTE;

  CURSOR cSaldos IS
    SELECT *
    FROM   SALDOS_COMISIONES_MES
    WHERE  CD_CIA            = 1
    AND    CD_AGENTE         = nCOD_AGENTE
    AND    FE_INI_SALDO      = DFEINISALDO --DFEINISALDO 
    AND    CD_MONEDA         = cCodMoneda
    --AND    MT_SALDO_INICIAL != 0 --MLJS 10/07/2024
    ORDER  BY FE_INI_SALDO
    ;

  CURSOR cComixRamo IS
    SELECT C.COD_AGENTE,  
           --DP.IDTIPOSEG, 
           OC_TIPOS_DE_SEGUROS.CODIGO_RAMO(C.CODCIA,C.CODEMPRESA,DP.IDTIPOSEG) RAMO,
           SUM(DC.MONTO_MON_EXTRANJERA) MONTO
    FROM   COMISIONES C,  DETALLE_POLIZA DP,
           DETALLE_COMISION DC
   WHERE  C.ESTADO     = 'REC'
     AND  C.COD_AGENTE in  (nCOD_AGENTE)
     AND  TRUNC(Fec_Estado) <= DFEINISALDO
     AND  DC.CODCIA    = 1
     AND    DC.IDCOMISION = C.IDCOMISION
     AND    DC.CODCONCEPTO NOT IN ('RETISR','IVASIN','IVAHON','RETIVA','AJUHON','AJUCOM')
     AND    DP.IDPOLIZA   = C.IDPOLIZA
     AND    DP.IDETPOL    = C.IDETPOL
     AND    OC_TIPOS_DE_SEGUROS.CODIGO_RAMO(C.CODCIA,C.CODEMPRESA,DP.IDTIPOSEG) = CRAMO
     GROUP BY C.COD_AGENTE, 
              OC_TIPOS_DE_SEGUROS.CODIGO_RAMO(C.CODCIA,C.CODEMPRESA,DP.IDTIPOSEG);  

BEGIN
  FOR I IN cDiferencia LOOP

    nCOD_AGENTE := I.AGENTE;
    FOR J IN cSaldos LOOP
      CRAMO := J.CD_TIPO_RAMO;
      BEGIN
          SELECT --C.COD_AGENTE,  
                 OC_TIPOS_DE_SEGUROS.CODIGO_RAMO(C.CODCIA,C.CODEMPRESA,DP.IDTIPOSEG) RAMO,
                 SUM(DC.MONTO_MON_EXTRANJERA) MONTO
          INTO   CRAMO, NMONTO_MON_EXTRANJERA
          FROM   COMISIONES C,  DETALLE_POLIZA DP,
                 DETALLE_COMISION DC
          WHERE  C.ESTADO     = 'REC'
            AND  C.COD_AGENTE in  (nCOD_AGENTE)
            AND  TRUNC(Fec_Estado) <= DFEINISALDO
            AND  DC.CODCIA    = 1
            AND    DC.IDCOMISION = C.IDCOMISION
            AND    DC.CODCONCEPTO NOT IN ('RETISR','IVASIN','IVAHON','RETIVA','AJUHON','AJUCOM')
            AND    DP.IDPOLIZA   = C.IDPOLIZA
            AND    DP.IDETPOL    = C.IDETPOL
            AND    OC_TIPOS_DE_SEGUROS.CODIGO_RAMO(C.CODCIA,C.CODEMPRESA,DP.IDTIPOSEG) = CRAMO
            GROUP BY C.COD_AGENTE, --DP.IDTIPOSEG, 
                     OC_TIPOS_DE_SEGUROS.CODIGO_RAMO(C.CODCIA,C.CODEMPRESA,DP.IDTIPOSEG);  
      EXCEPTION
        WHEN OTHERS THEN
           NMONTO_MON_EXTRANJERA := 0;
      END;
      -- SE VALIDA SI EL IMPORTE DEL SALDO Y DE LA COMISION SON IGUALES
      dbms_output.put_line('J.MT_SALDO_FINAL ..'||J.MT_SALDO_FINAL);
      dbms_output.put_line('NMONTO_MON_EXTRANJERA ..'||NMONTO_MON_EXTRANJERA);
      NDIFERENCIA := NMONTO_MON_EXTRANJERA - J.MT_SALDO_FINAL; 
      IF NDIFERENCIA != 0 THEN    
        NMT_SALDO_FINAL  := J.MT_SALDO_INICIAL + J.MT_COMISION_MES + NDIFERENCIA;

        UPDATE SALDOS_COMISIONES_MES
        SET    MT_COMISION_MES = MT_COMISION_MES + NDIFERENCIA, 
               MT_SALDO_FINAL  = NMT_SALDO_FINAL
        WHERE  CD_CIA            = J.CD_CIA
        AND    CD_AGENTE         = J.CD_AGENTE
        AND    FE_INI_SALDO      = J.FE_INI_SALDO
        AND    CD_MONEDA         = J.CD_MONEDA
        AND    CD_TIPO_RAMO      = J.CD_TIPO_RAMO;

        UPDATE SALDOS_COMISIONES_MES
        SET    MT_SALDO_INICIAL = NMT_SALDO_FINAL
        WHERE  CD_CIA            = J.CD_CIA
        AND    CD_AGENTE         = J.CD_AGENTE
        AND    FE_INI_SALDO      = TRUNC(SYSDATE)
        AND    CD_MONEDA         = J.CD_MONEDA
        AND    CD_TIPO_RAMO      = J.CD_TIPO_RAMO;

      END IF;
    END LOOP;
  END LOOP; 
  
  COMMIT;
  
END;
/
